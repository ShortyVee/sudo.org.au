/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 9);
/******/ })
/************************************************************************/
/******/ ({

/***/ 10:
/***/ (function(module, exports) {

var app = new Vue({
	el: '#voting',
	data: {
		apiURL: "https://sudoapistaging.herokuapp.com/",
		candidates: []
	},
	methods: {
		contains: function contains(needle) {
			// Per spec, the way to identify NaN is that it is not equal to itself
			var findNaN = needle !== needle;
			var indexOf;

			if (!findNaN && typeof Array.prototype.indexOf === 'function') {
				indexOf = Array.prototype.indexOf;
			} else {
				indexOf = function indexOf(needle) {
					var i = -1,
					    index = -1;

					for (i = 0; i < this.length; i++) {
						var item = this[i];

						if (findNaN && item !== item || item === needle) {
							index = i;
							break;
						}
					}

					return index;
				};
			}

			return indexOf.call(this, needle) > -1;
		},
		refresh: function refresh() {
			setTimeout(function () {
				app.$http.get('https://sudoapistaging.herokuapp.com/api/pitch/candidates').then(function (response) {
					var cand = response.body;
					var addTo = [];
					cand.forEach(function (can) {
						can.selected = false;
						can.disabled = false;
					});
					cand.forEach(function (can) {
						if (app.contains(app.candidates, cand)) {
							console.log("YESSSSS");
						} else {
							addTo.push(cand);
						}
					});

					app.candidates = addTo;
				}, function (response) {
					// error callback
				});

				app.refresh();
			}, 10000);
		},
		selectCan: function selectCan(can) {

			// Change Selected Value on Object
			if (can.selected) {
				this.$http.get('https://sudoapistaging.herokuapp.com/api/pitch/downvote/' + can.id).then(function (response) {
					console.log("Success");
				}, function (response) {
					// error callback
				});
				can.selected = false;
			} else {
				if (!can.disabled) {
					this.$http.get('https://sudoapistaging.herokuapp.com/api/pitch/vote/' + can.id).then(function (response) {
						console.log("Success");
					}, function (response) {
						// error callback
					});
					can.selected = true;
				}
			}

			var count = function () {
				var numberOfSelected = 0;
				app.candidates.forEach(function (can) {
					if (can.selected == true) {
						numberOfSelected++;
					}
				});
				return numberOfSelected;
			}();

			if (count >= 3) {
				app.candidates.forEach(function (can) {
					if (can.selected == false) {
						can.disabled = true;
					}
				});
			} else {
				app.candidates.forEach(function (can) {
					can.disabled = false;
				});
			}

			Vue.nextTick(function () {
				// DOM updated
			});
			console.log(can);
		}
	},
	mounted: function mounted() {
		this.$http.get('https://sudoapistaging.herokuapp.com/api/pitch/candidates').then(function (response) {
			var cand = response.body;
			cand.forEach(function (can) {
				can.selected = false;
				can.disabled = false;
			});
			app.candidates = cand;
		}, function (response) {
			// error callback
		});
	}
});

app.refresh();

/***/ }),

/***/ 9:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(10);


/***/ })

/******/ });