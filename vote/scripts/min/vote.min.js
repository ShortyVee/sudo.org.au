/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 9);
/******/ })
/************************************************************************/
/******/ ({

/***/ 10:
/***/ (function(module, exports) {

var app = new Vue({
				name: 'Root2',
				el: '#voting',
				data: {
								apiURL: "http://am.local:9090/api/pitch/",
								candidates: []
				},
				methods: {
								contains: function contains(needle) {
												// Per spec, the way to identify NaN is that it is not equal to itself
												var findNaN = needle !== needle;
												var indexOf;

												if (!findNaN && typeof Array.prototype.indexOf === 'function') {
																indexOf = Array.prototype.indexOf;
												} else {
																indexOf = function indexOf(needle) {
																				var i = -1,
																				    index = -1;

																				for (i = 0; i < this.length; i++) {
																								var item = this[i];

																								if (findNaN && item !== item || item === needle) {
																												index = i;
																												break;
																								}
																				}

																				return index;
																};
												}

												return indexOf.call(this, needle) > -1;
								},
								refresh: function refresh() {
												var _this = this;
												setTimeout(function () {
																app.$http.get(_this.apiURL + 'candidates').then(function (response) {
																				var candidates = response.body;
																}, function (response) {
																				// error callback
																});

																app.refresh();
												}, 10000);
								},
								toggleDisabled: function toggleDisabled() {
												app.candidates.forEach(function (can) {
																if (can.selected == true) {
																				numberOfSelected++;
																}
												});
								},
								selectCan: function selectCan(can) {
												var _this = this;
												// Change Selected Value on Object
												if (can.selected) {
																can.disabled = true;
																this.$http.get(_this.apiURL + 'downvote/' + can.id).then(function (response) {
																				console.log("Success");
																				can.disabled = false;
																}, function (response) {
																				// error callback
																});
																can.selected = false;
												} else {
																if (!can.disabled) {
																				can.disabled = true;
																				this.$http.get(_this.apiURL + 'vote/' + can.id).then(function (response) {
																								console.log("Success");
																								can.disabled = false;
																				}, function (response) {
																								// error callback
																				});
																				can.selected = true;
																}
												}

												var count = function () {
																var numberOfSelected = 0;
																app.candidates.forEach(function (can) {
																				if (can.selected == true) {
																								numberOfSelected++;
																				}
																});
																return numberOfSelected;
												}();

												if (count >= 3) {
																app.candidates.forEach(function (can) {
																				if (can.selected == false) {
																								can.disabled = true;
																				}
																});
												} else {
																app.candidates.forEach(function (can) {
																				can.disabled = false;
																});
												}

												Vue.nextTick(function () {
																// DOM updated
												});
												console.log(can);
								}
				},
				mounted: function mounted() {
								var _this = this;
								this.$http.get(_this.apiURL + 'candidates').then(function (response) {
												var cand = response.body;
												cand.forEach(function (can) {
																can.selected = false;
																can.disabled = false;
												});
												app.candidates = cand;
								}, function (response) {
												// error callback
								});
				}
});

app.refresh();

/***/ }),

/***/ 9:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(10);


/***/ })

/******/ });